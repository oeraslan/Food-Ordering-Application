env:
  IMAGE_NAME: ${{ github.repository }}
  REGISTRY: ghcr.io
jobs:
  build:
    permissions:
      contents: read
      id-token: write
      packages: write
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - if: github.event_name != 'pull_request'
      name: Install cosign
      uses: sigstore/cosign-installer@59acb6260d9c0ba8f4a2f9d9b48431a222b68e20
      with:
        cosign-release: v2.2.4
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226
    - if: github.event_name != 'pull_request'
      name: Log into registry ${{ env.REGISTRY }}
      uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
    - id: meta
      name: Extract Docker metadata
      uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: latest, main-${{ github.sha}}-${{ github.run_number }}
    - id: build-and-push
      name: Build and push Docker image
      uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        context: ./
        labels: ${{ steps.meta.outputs.labels }}
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
    - env:
        DIGEST: ${{ steps.build-and-push.outputs.digest }}
        TAGS: ${{ steps.meta.outputs.tags }}
      if: ${{ github.event_name != 'pull_request' }}
      name: Sign the published Docker image
      run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
name: Docker
"on":
  pull_request:
    branches:
    - master
  push:
    branches:
    - master
    tags:
    - v*..
